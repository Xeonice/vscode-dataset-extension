const hoverDocs = {
  "DataSet": {
    "hoverDoc": "| 参数                    | 说明                                                                                                                               | 类型                             | 默认值                                                                           |\n| --------------------- | -------------------------------------------------------------------------------------------------------------------------------- | ------------------------------ | ----------------------------------------------------------------------------- |\n| name                  | 对应后台 ds 的 name，自动生成约定的 submitUrl, queryUrl, tlsUrl, validateUrl                                                                  | string                         |                                                                               |\n| data                  | 初始化数据                                                                                                                            | Array&lt;object>               |                                                                               |\n| autoQuery             | 初始化后自动查询                                                                                                                         | boolean                        | false                                                                         |\n| autoQueryAfterSubmit  | 提交成功后响应的数据不符合回写条件时自动查询。注：回写条件是指响应数据中含有提交时的数据时，数据将按数据状态分组进行顺序回写，如果要更准确的回写，响应数据要含有提交时的\\_\\_id 字段值。                                  | boolean                        | true                                                                          |\n| autoCreate            | 初始化时，如果没有记录且 autoQuery 为 false，则自动创建记录                                                                                           | boolean                        | false                                                                         |\n| autoLocateFirst       | 数据加载后自动定位到第一条记录                                                                                                                  | boolean                        | true                                                                          |\n| autoLocateAfterCreate | 自动定位到新建记录                                                                                                                        | boolean                        | true                                                                          |\n| autoLocateAfterRemove | 当前数据被删除后自动定位到其他记录                                                                                                                | boolean                        | true                                                                          |\n| selection             | 选择的模式, 可选值：`false` `'multiple'` `'single'`                                                                                       | boolean \\| string              | 'multiple'                                                                    |\n| modifiedCheck         | 查询前，当有记录更改过时，是否警告提示。                                                                                                             | boolean                        | false                                                                         |\n| modifiedCheckMessage  | 查询前，当有记录更改过时，警告提示。                                                                                                               | ReactNode \\| ModalProps        |                                                                               |\n| pageSize              | 分页大小                                                                                                                             | number                         | 10                                                                            |\n| paging                | 是否分页, `server` 主要为table的tree服务,约定total为根节点数目,index的定位都是基于根节点, 为`server`时候保证同时存在idField 和parentField(根节点为空或者undefind) 不然表现和原有版本一致 | boolean \\| `server`            | true                                                                          |\n| dataKey               | 查询返回的 json 中对应的数据的 key, 当为 null 时对应整个 json 数据, json 不是数组时自动作为新数组的第一条数据                                                           | string \\| null                 | rows                                                                          |\n| totalKey              | 查询返回的 json 中对应的总数的 key                                                                                                           | string                         | total                                                                         |\n| queryDataSet          | 查询条件数据源                                                                                                                          | DataSet                        |                                                                               |\n| queryUrl              | 查询请求的 url。 当设定 name 时，默认 /dataset/{name}/queries                                                                                 | string                         |                                                                               |\n| queryParameter        | 查询请求的初始参数                                                                                                                        | object                         |                                                                               |\n| submitUrl             | 记录提交请求的 url。 当设定 name 时，默认 /dataset/{name}/mutations                                                                             | string                         |                                                                               |\n| tlsUrl                | 多语言查询请求的 url。 当设定 name 时， 默认 /dataset/{name}/languages                                                                           | string                         |                                                                               |\n| validateUrl           | 远程校验查询请求的 url。 当设定 name 时， 默认 /dataset/{name}/validate                                                                           | string                         |                                                                               |\n| exportUrl             | 导出请求的 url。 当设定 name 时， 默认 /dataset/{name}/export                                                                                 | string                         |                                                                               |\n| transport             | 自定义 CRUD 请求配置, 详见[Transport](#Transport) 及 [AxiosRequestConfig](#AxiosRequestConfig)                                             | Transport                      |                                                                               |\n| feedback              | 查询和提交数据的反馈配置, 详见[Feedback](#Feedback)                                                                                            | Feedback                       |                                                                               |\n| children              | 级联行数据集, 例： { name_1: dataSet1, name_2: dataSet2 }                                                                                | { name: DataSet }              |                                                                               |\n| primaryKey            | 主键字段名，一般用作级联行表的查询字段                                                                                                              | string                         |                                                                               |\n| idField               | 树形数据当前节点 id 字段名                                                                                                                  | string                         |                                                                               |\n| parentField           | 树形数据当前父节点 id 字段名                                                                                                                 | string                         |                                                                               |\n| expandField           | 树形数据标记节点是否展开的字段名                                                                                                                 | string                         |                                                                               |\n| checkField            | 树形数据标记节点是否为选中的字段名，在展开按钮后面会显示 checkbox                                                                                            | string                         |                                                                               |\n| fields                | 字段属性数组，详见[Field Props]\\(#Field Props)                                                                                            | object\\[]                      |                                                                               |\n| queryFields           | 查询字段属性数组，在内部生成 queryDataSet，优先级低于 queryDataSet 属性，详见[Field Props]\\(#Field Props)                                                 | object\\[]                      |                                                                               |\n| cacheSelection        | 缓存选中记录，使切换分页时仍保留选中状态。当设置了 primaryKey 或有字段设置了 unique 才起作用。                                                                        | boolean                        | false                                                                         |\n| axios                 | 覆盖默认 axios                                                                                                                       | AxiosInstance                  |                                                                               |\n| dataToJSON            | 数据转为 json 的方式，详见[DataToJSON](#DataToJSON)                                                                                        | DataToJSON                     | dirty                                                                         |\n| cascadeParams         | 级联查询参数                                                                                                                           | (record, primaryKey) => object | (record, primaryKey) => primaryKey ? record.get(primaryKey) : record.toData() |"
  },
  "TriggerField": {
    "hoverDoc": "| 参数                  | 说明                                                   | 类型                                         | 默认值 |\n| ------------------- | ---------------------------------------------------- | ------------------------------------------ | --- |\n| popupContent        | 下拉框的自定义内容                                            | ReactNode \\| (props) => ReactNode          |     |\n| popupCls            | 下拉框的自定义样式名                                           | string                                     |     |\n| popupStyle          | 下拉框的内链样式                                             | CSSProperties                              |     |\n| trigger             | 触发下拉框的方式组, 可选值：`click` `focus` `hover` `contextMenu` | string\\[]                                  |     |\n| triggerShowDelay    | 下拉框显示延迟                                              | number                                     | 150 |\n| triggerHiddenDelay  | 下拉框隐藏延迟                                              | number                                     | 50  |\n| onPopupHiddenChange | 下拉框变化的钩子                                             | (hidden: boolean) => void                  |     |\n| getPopupContainer   | 定义浮层的容器，默认为 body                                     | (triggerNode: HTMLElement) => HTMLElement; |     |"
  },
  "Field": {
    "hoverDoc": "| 参数                 | 说明                                                                                       | 类型                                                                        | 默认值                |\n| ------------------ | ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------------- | ------------------ |\n| label              | 标签, 只在 Form 下生效                                                                          | string \\| ReactNode                                                       |                    |\n| name               | 字段名                                                                                      | string                                                                    |                    |\n| value              | &lt;受控>当前值                                                                               | any                                                                       |                    |\n| defaultValue       | 默认值                                                                                      | any                                                                       |                    |\n| required           | 是否必输                                                                                     | boolean                                                                   | false              |\n| readOnly           | 是否只读                                                                                     | boolean                                                                   | false              |\n| disabled           | 是否禁用                                                                                     | boolean                                                                   | false              |\n| form               | 对照表单 id                                                                                  | string                                                                    |                    |\n| dataIndex          | 对照 record 在 DataSet 中的 index                                                             | number                                                                    | ds.currentIndex    |\n| record             | 对照 record, 优先级高于 dataSet 和 dataIndex                                                     | Record                                                                    |                    |\n| multiple           | 是否是多值                                                                                    | boolean                                                                   | false              |\n| validator          | 校验器，回调返回值为`true` 或 `Promise.resolve(true)`为校验通过，否则为不通过                                   | (value, name, form) => string \\| boolean \\| Promise&lt;string \\| boolean> |                    |\n| help               | 额外信息，常用于提示                                                                               | `string`                                                                  | `undefined`        |\n| showHelp           | 展示提示信息的方式，`tooltip`只有在`TextField`及其子类上生效， 可选值 `tooltip` `newLine` `none`                 | string                                                                    | `newLine`          |\n| renderer           | 渲染器，覆盖默认渲染行为                                                                             | ({ value, text, name, record, dataSet }) => ReactNode                     | ({ text }) => text |\n| noValidate         | 不校验，不影响 DataSet 校验                                                                       | boolean                                                                   | false              |\n| maxTagPlaceholder  | 多值标签超出最大数量时的占位描述                                                                         | ReactNode \\| (restValues) => ReactNode                                    |                    |\n| maxTagCount        | 多值标签最大数量                                                                                 | number                                                                    |                    |\n| maxTagTextLength   | 多值标签文案最大长度                                                                               | number                                                                    |                    |\n| pristine           | 显示原始值                                                                                    | boolean                                                                   | false              |\n| trim               | 字符串值是否去掉首尾空格，如果绑定 DataSet 需要在 DataSet 的 Field 上设置 trim，可选值: `both` `left` `right` `none` | string                                                                    | `both`             |\n| format             | 字符串格式化，可选值: `uppercase` `lowercase` `capitalize`                                         | string                                                                    |                    |\n| validationRenderer | 校验信息渲染                                                                                   | (validationResult, validationProps) => ReactNode                          |                    |\n| onInvalid          | 校验失败回调                                                                                   | (validationResults, validity, name) => void                               |                    |\n| onChange           | 值变化回调                                                                                    | (value, oldValue, form) => void                                           |                    |\n| onInput            | 输入回调                                                                                     | Function                                                                  |                    |\n| onEnterDown        | 键盘回车回调                                                                                   | Function                                                                  |                    |\n| onClear            | 值清空回调                                                                                    | Function                                                                  |                    |"
  },
  "ViewComponent": {
    "hoverDoc": "| 参数            | 说明                                            | 类型            | 默认值     |\n| ------------- | --------------------------------------------- | ------------- | ------- |\n| id            | 组件id                                          | string        |         |\n| className     | 自定义样式名                                        | string        |         |\n| style         | 内链样式                                          | CSSProperties |         |\n| disabled      | 禁用                                            | boolean       | false   |\n| tabIndex      | 键盘Tab键焦点序号，设为-1时不会获得焦点，设为0时为节点树的顺序。           | number        |         |\n| title         | 悬浮提示，建议用[ToolTip]组件                           | string        |         |\n| hidden        | 是否隐藏                                          | boolean       | false   |\n| autoFocus     | 自动获取焦点，多个组件同时设置该参数时，以节点树的顺序最末的组件获取焦点          | boolean       | false   |\n| size          | 组件大小&lt;未实现>，可选值 `default` `small` `large`    | string        | default |\n| onFocus       | 获取焦点回调                                        | Function      |         |\n| onBlur        | 失去焦点回调                                        | Function      |         |\n| onClick       | 单击回调                                          | Function      |         |\n| onDoubleClick | 双击回调                                          | Function      |         |\n| onContextMenu | 右点击回调                                         | Function      |         |\n| onMouseUp     | 鼠标抬起回调                                        | Function      |         |\n| onMouseDown   | 鼠标点下回调                                        | Function      |         |\n| onMouseMove   | 鼠标移动回调                                        | Function      |         |\n| onMouseEnter  | 鼠标进入回调                                        | Function      |         |\n| onMouseLeave  | 鼠标离开回调                                        | Function      |         |\n| onMouseOver   | 鼠标进入回调，与onMouseEnter区别在于鼠标进入子节点时会触发onMouseOut | Function      |         |\n| onMouseOut    | 鼠标离开回调                                        | Function      |         |\n| onKeyDown     | 键盘按下时的回调                                      | Function      |         |\n| onKeyUp       | 键盘抬起时的回调                                      | Function      |         |\n| onKeyPress    | 键盘敲击后的回调                                      | Function      |         |"
  },
  "Button": {
    "hoverDoc": "| 属性       | 说明                                                                                                                                                          | 类型          | 默认值        |\n| -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- | ---------- |\n| type     | 设置按钮类型，可选值为 `button` `submit` `reset`                                                                                                                       | string      | `button`   |\n| color    | 设置按钮颜色风格，可选值为 `default` `primary` `blue` `yellow` `red` `dark` `green` `purple`                                                                             | string      | `default`  |\n| funcType | 设置按钮展现模式，可选值为 `flat` `raised`                                                                                                                               | string      | `raised`   |\n| loading  | 设置按钮是否是加载状态,**注意设置false与不设置的表现是不一样的**，不设置时，当onClick为返回`Promise`的时候,会自动开启loading，设置为`false`时不会开启loading状态，当设置为`true`的时候则一直使用loading状态，建议通过onClick控制loading状态 | boolean     |            |\n| icon     | 设置按钮图标                                                                                                                                                      | string      | -          |\n| href     | 点击跳转的地址，指定此属性 button 的行为和 a 链接一致                                                                                                                            | string      | -          |\n| target   | 相当于 a 链接的 target 属性，href 存在时生效                                                                                                                              | string      | -          |\n| wait     | 设置按钮点击间隔时间                                                                                                                                                  | number      | -          |\n| waitType | 设置按钮点击间隔类型，可选值： `throttle` `debounce`                                                                                                                       | string      | `throttle` |\n| onClick  | 点击按钮时的回调, 当回调返回值为 Promise，则会出现 loading 状态直到 Promise 的状态不为 pending                                                                                           | (e) => void | Promise    |"
  },
  "Tree": {
    "hoverDoc": "| 参数                  | 说明                                   | 类型                                                                                        | 默认值      |\n| ------------------- | ------------------------------------ | ----------------------------------------------------------------------------------------- | -------- |\n| dataSet             | 绑定的数据源                               | DataSet                                                                                   |          |\n| renderer            | 节点title渲染钩子，只在绑定数据源时起效               | ({ dataSet, record, text }) => ReactNode                                                  |          |\n| defaultExpandAll    | 默认展开所有树节点当dataSet绑定expandField 时候忽略  | boolean                                                                                   | false    |\n| defaultExpandedKeys | 默认展开指定的树节点当dataSet绑定expandField 时候忽略 | string\\[]                                                                                 | \\[]      |\n| defaultCheckedKeys  | 默认选中复选框的树节点当dataSet绑定checkField 时候忽略 | string\\[]                                                                                 | \\[]      |\n| defaultSelectKeys   | 默认选择节点当，默认绑定dataSet的 idField         | string\\[]                                                                                 | \\[]      |\n| treeNodeRenderer    | 对于Treenode 结点的渲染覆盖                   | ((props: {record?: Record \\| null;dataSet?: DataSet \\| null;}) => TreeNodeRendererProps ) | () => {} |"
  },
  "Tooltip": {
    "hoverDoc": "| 参数    | 说明   | 类型                                 | 默认值 |\n| ----- | ---- | ---------------------------------- | --- |\n| title | 提示文字 | string\\|ReactNode\\|() => ReactNode | 无   |"
  },
  "Table": {
    "hoverDoc": "| 参数                    | 说明                                                                                                                                                                | 类型                                                                                                                         | 默认值      |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | -------- |\n| header                | 表头                                                                                                                                                                | ReactNode \\| (records) => ReactNode                                                                                        |          |\n| footer                | 表脚                                                                                                                                                                | ReactNode \\| (records) => ReactNode                                                                                        |          |\n| border                | 是否显示边框                                                                                                                                                            | boolean                                                                                                                    | true     |\n| selectionMode         | 选择记录的模式, 可选值: `rowbox` `click` `dblclick` `mousedown` `none`                                                                                                      | string                                                                                                                     | 'rowbox' |\n| alwaysShowRowBox      | 是否一直显示rowbox,开启后在其他模式下也会显示rowbox                                                                                                                                  | boolean                                                                                                                    | false    |\n| onRow                 | 设置行属性                                                                                                                                                             | ({ dataSet, record, index, expandedRow }) => object                                                                        |          |\n| buttons               | 功能按钮，内置按钮可添加 `afterClick` 钩子，用于执行除了默认行为外的动作，可选值：`add` `delete` `remove` `save` `query` `reset` `expandAll` `collapseAll` `export` 或 数组 或 自定义按钮，数组为可选值字符串+按钮配置属性对象 | string \\| \\[string, object] \\| ReactNode \\| object                                                                         |          |\n| queryFields           | 自定义查询字段组件或默认组件属性，默认会根据 queryDataSet 中定义的 field 类型自动匹配组件                                                                                                           | ReactNode\\[] \\| object                                                                                                     |          |\n| queryFieldsLimit      | 头部显示的查询字段的数量，超出限制的查询字段放入弹出窗口                                                                                                                                      | number                                                                                                                     |          |\n| queryBar              | 查询条, 可选值为钩子或者内置类型：`professionalBar` `advancedBar` `normal` `bar` `none`                                                                                           | string \\| ({ dataSet, queryDataSet, buttons, pagination, queryFields, queryFieldsLimit }) => ReactNode                     | 'normal' |\n| useMouseBatchChoose   | 是否使用鼠标批量选择,开启后在rowbox的情况下可以进行鼠标拖动批量选择,在起始的rowbox处按下,在结束位置松开                                                                                                       | boolean                                                                                                                    | false    |\n| rowHeight             | 行高                                                                                                                                                                | number \\| auto                                                                                                             | 30       |\n| defaultRowExpanded    | 默认行是否展开，当 dataSet 没有设置 expandField 时才有效                                                                                                                           | boolean                                                                                                                    | false    |\n| expandRowByClick      | 通过点击行来展开子行                                                                                                                                                        | boolean                                                                                                                    | false    |\n| expandedRowRenderer   | 展开行渲染器                                                                                                                                                            | ({ dataSet, record }) => ReactNode                                                                                         |          |\n| expandIcon            | 自定义展开图标                                                                                                                                                           | ({ prefixCls, expanded, expandable, needIndentSpaced, record, onExpand }) => ReactNode                                     |          |\n| expandIconColumnIndex | 展开图标所在列索引                                                                                                                                                         | number                                                                                                                     |          |\n| indentSize            | 展示树形数据时，每层缩进的宽度                                                                                                                                                   | number                                                                                                                     | 15       |\n| filter                | 数据过滤， 返回值 true - 显示 false - 不显示                                                                                                                                   | (record) => boolean                                                                                                        |          |\n| mode                  | 表格展示的模式, tree 需要配合 dataSet 的`idField`和`parentField`来展示，可选值: `list` `tree`                                                                                         | string                                                                                                                     | 'list'   |\n| editMode              | 表格编辑的模式，可选值: `cell` `inline`                                                                                                                                      | string                                                                                                                     | 'cell'   |\n| filterBarFieldName    | `queryBar`为`bar`时，直接输入的过滤条件的字段名                                                                                                                                   | string                                                                                                                     | 'params' |\n| filterBarPlaceholder  | `queryBar`为`bar`时输入框的占位符                                                                                                                                          | string                                                                                                                     |          |\n| pagination            | 分页器，参考[配置项](#pagination)或 [pagination](/components/pagination/)，设为 false 时不展示分页                                                                                   | object \\| false                                                                                                            |          |\n| highLightRow          | 当前行高亮                                                                                                                                                             | boolean                                                                                                                    | true     |\n| selectedHighLightRow  | 勾选行高亮                                                                                                                                                             | boolean                                                                                                                    | false    |\n| columnResizable       | 可调整列宽                                                                                                                                                             | boolean                                                                                                                    | true     |\n| pristine              | 显示原始值                                                                                                                                                             | boolean                                                                                                                    | false    |\n| onExpand              | 点击展开图标时触发                                                                                                                                                         | (expanded, record) => void                                                                                                 |          |\n| virtual               | 是否开启虚拟滚动,当设置表格高度 `style={{ height: xxx }}` 时有效                                                                                                                    | boolean                                                                                                                    | false    |\n| virtualSpin           | 是否开启虚拟滚动Spin                                                                                                                                                      | boolean                                                                                                                    | false    |\n| autoHeight            | 是否开启高度自适应                                                                                                                                                         | boolean \\| { type: 'minHeight' \\| 'maxHeight', diff: number(80) }                                                          | false    |\n| autoMaxWidth          | 是否开启双击侧边栏宽度最大自适应,初次双击为最大值再次双击为`minWidth`                                                                                                                          | boolean                                                                                                                    | false    |\n| dragColumnAlign       | 增加一个可拖拽列，实现行拖拽                                                                                                                                                    | 'left'\\|'right'                                                                                                            |          |\n| dragColumn            | 打开列拖拽,组合列无法使用                                                                                                                                                     | boolean                                                                                                                    | false    |\n| dragRow               | 行拖拽，实现行的拖拽，会导致拖拽列的一些事件失效，可以用dragColumnAlign来避免，树形数据无法使用                                                                                                           | boolean                                                                                                                    | false    |\n| onDragEnd             | 完成拖拽后的触发事件，可以通过 resultDrag.destination.droppableId === 'table' or ‘tableHeader’ 来判断是行拖拽还是列拖拽                                                                      | (dataSet:DataSet,columns:ColumnProps\\[],resultDrag: DropResult, provided: ResponderProvided) => void                       |          |\n| columnsDragRender     | 控制列的拖拽渲染，从这里可以实现对默认的拖拽的一些自定义的设置，需要参阅react-beautiful-dnd                                                                                                           | 请查看DragRender[配置项](#DragRender)                                                                                            |          |\n| rowDragRender         | 控制列的拖拽渲染，从这里可以实现对默认的拖拽的一些自定义的设置，需要参阅react-beautiful-dnd                                                                                                           | 请查看DragRender[配置项](#DragRender)                                                                                            |          |\n| columnsMergeCoverage  | 优先级高于colums，可以实现表头文字修改自定义修改和列的位置自定义修改                                                                                                                             | ColumnProps\\[]                                                                                                             | -        |\n| columnsOnChange       | 拖拽列和修改表头文字触发事件                                                                                                                                                    | `(change:{columns:columnProps[]:colum:columnProps,type:string}) => void`                                                   | -        |\n| columnsEditType       | 合并列信息选择，目前可以选择表头文字或者表的位置进行合并                                                                                                                                      | `order`  `all`  `header`                                                                                                   | `all`    |\n| onDragEndBefore       | 完成拖拽后,切换位置之前的触发事件，可以通过 resultDrag.destination.droppableId === 'table' or ‘tableHeader’ 来判断是行拖拽还是列拖拽,返回false阻止拖拽换位置                                                | (dataSet:DataSet,columns:ColumnProps\\[],resultDrag: DropResult, provided: ResponderProvided) => false \\| void \\|resultDrag | -        |"
  },
  "Skeleton": {
    "hoverDoc": "| 属性            | 说明                   | 类型      | 默认值  |\n| ------------- | -------------------- | ------- | ---- |\n| skeletonTitle | 是否显示标题占位图,等同于title属性 | boolean | true |"
  },
  "Progress": {
    "hoverDoc": "| 参数      | 说明                  | 类型      | 默认值 |\n| ------- | ------------------- | ------- | --- |\n| value   | 当前百分比值，同percent,受控。 | number  | -   |\n| dataSet | 数据源                 | DataSet | -   |\n| name    | 字段名                 | string  | -   |"
  },
  "ModalProvider": {
    "hoverDoc": "| 参数       | 说明                                                   | 类型                   | 默认值 |\n| -------- | ---------------------------------------------------- | -------------------- | --- |\n| location | 路由的 location 对象。当设定了 location，路由变更时会自动清空所有已打开的 Modal | { pathname: string } |     |"
  },
  "Modal": {
    "hoverDoc": "| 参数                   | 说明                                                                                        | 类型                                                                 | 默认值           |\n| -------------------- | ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------ | ------------- |\n| key                  | 唯一键， 当 destroyOnClose 为 false 时，必须指定 key。为了避免与其他 modal 的 key 重复，可通过 Modal.key()来获取唯一 key。 | string                                                             |               |\n| title                | 标题                                                                                        | ReactNode                                                          |               |\n| closable             | 显示右上角关闭按钮                                                                                 | boolean                                                            | false         |\n| movable              | 可移动， drawer 无法移动                                                                          | boolean                                                            | true          |\n| fullScreen           | 全屏显示                                                                                      | boolean                                                            | false         |\n| maskClosable         | 点击蒙层是否允许关闭                                                                                | boolean                                                            | false         |\n| mask                 | 是否显示蒙层                                                                                    | boolean                                                            | true          |\n| maskStyle            | 蒙层样式                                                                                      | CSSProperties                                                      |               |\n| maskClassName        | 蒙层自定义样式名                                                                                  | string                                                             |               |\n| keyboardClosable     | 按 esc 键是否允许关闭                                                                             | boolean                                                            | true          |\n| destroyOnClose       | 关闭时是否销毁                                                                                   | boolean                                                            | true          |\n| footer               | 底部内容                                                                                      | ReactNode 或`(okBtn: ReactNode, cancelBtn: ReactNode) => ReactNode` |               |\n| okText               | 确认按钮文字                                                                                    | ReactNode                                                          | 确定            |\n| cancelText           | 取消按钮文字                                                                                    | ReactNode                                                          | 取消            |\n| onClose              | 关闭时回调，返回`false` `Promise.resolve(false)`或`Promise.reject()`不会关闭， 其他自动关闭                   | () => Promise&lt;boolean>                                          |               |\n| onOk                 | 点击确定回调，返回`false` `Promise.resolve(false)`或`Promise.reject()`不会关闭， 其他自动关闭                  | () => Promise&lt;boolean>                                          |               |\n| onCancel             | 点击取消回调，返回`false` `Promise.resolve(false)`或`Promise.reject()`不会关闭， 其他自动关闭                  | () => Promise&lt;boolean>                                          |               |\n| afterClose           | 关闭后回调                                                                                     | () => void                                                         |               |\n| drawer               | 抽屉模式                                                                                      | boolean                                                            | false         |\n| drawerTransitionName | 抽屉模式使用的动画                                                                                 | string                                                             | 'slide-right' |\n| okCancel             | 同时显示 ok 和 cancel 按钮，false 的时候只显示 ok 按钮                                                    | boolean                                                            | true          |\n| okFirst              | ok 按钮是否排在第一个                                                                              | boolean                                                            | true          |\n| okProps              | ok 按钮属性                                                                                   | object                                                             |               |\n| cancelProps          | cancel 按钮属性                                                                               | object                                                             |               |"
  },
  "Pagination": {
    "hoverDoc": "| 参数                        | 说明                                                                          | 类型                                             | 默认值                        |\n| ------------------------- | --------------------------------------------------------------------------- | ---------------------------------------------- | -------------------------- |\n| total                     | 总数                                                                          | number                                         |                            |\n| page                      | 当前页                                                                         | number                                         |                            |\n| pageSize                  | 分页数                                                                         | number                                         |                            |\n| onChange                  | 页码改变的回调，参数是改变后的页码及每页条数                                                      | (page, pageSize) => void                       |                            |\n| pageSizeOptions           | 指定每页可以显示多少条                                                                 | string\\[]                                      | \\['10', '20', '50', '100'] |\n| showQuickJumper           | 是否显示快速跳转至某页                                                                 | boolean \\| { goButton: ReactNode }             | false                      |\n| hideOnSinglePage          | 只有一页时是否隐藏分页器                                                                | boolean                                        | false                      |\n| showSizeChanger           | 是否显示分页大小选择器                                                                 | boolean                                        | true                       |\n| showSizeChangerLabel      | 是否显示分页大小选择器的标签                                                              | boolean                                        | true                       |\n| showTotal                 | 显示总数，当传入function时可自定义显示数据总量和当前数据顺序                                          | boolean \\| Function(total, range)              | true                       |\n| showPager                 | 显示数字按钮                                                                      | boolean                                        | false                      |\n| itemRender                | 按钮渲染。`type` - 按钮类型，可选值：`first` `last` `prev` `next` `jump-prev` `jump-next` | (page, type) => ReactNode                      |                            |\n| sizeChangerPosition       | 分页大小选择器的位置，可选值: `left` `right`                                              | string                                         | left                       |\n| sizeChangerOptionRenderer | 分页大小选择器的选项渲染器                                                               | ({ dataSet, record, text, value}) => ReactNode | ({ text }) => text         |"
  },
  "Dropdown": {
    "hoverDoc": "| 参数                | 说明                                                                                                           | 类型                                        | 默认值                   |\n| ----------------- | ------------------------------------------------------------------------------------------------------------ | ----------------------------------------- | --------------------- |\n| disabled          | 菜单是否禁用                                                                                                       | boolean                                   | -                     |\n| getPopupContainer | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codepen.io/afc163/pen/zEjNOy?editors=0010) | Function(triggerNode)                     | `() => document.body` |\n| overlay           | 菜单                                                                                                           | [Menu](/components/menu)                  | -                     |\n| placement         | 菜单弹出位置：`bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight`                            | String                                    | `bottomLeft`          |\n| trigger           | 触发下拉的行为                                                                                                      | Array&lt;`click`\\|`hover`\\|`contextMenu`> | `['click', 'focus']`  |\n| hidden            | 菜单是否隐藏                                                                                                       | boolean                                   | -                     |\n| onHiddenChange    | 菜单显示状态改变时调用，参数为 hidden                                                                                       | Function(hidden)                          | -                     |\n| onOverlayClick    | 点击菜单时调用，参数为 event                                                                                            | Function(event)                           | -                     |"
  },
  "Transfer": {
    "hoverDoc": "| 参数 | 说明 | 类型 | 默认值 |\n| -- | -- | -- | --- |"
  },
  "TextField": {
    "hoverDoc": "| 参数           | 说明                     | 类型                  | 默认值   |\n| ------------ | ---------------------- | ------------------- | ----- |\n| placeholder  | 占位词。当为range时，可以设定两个占位词 | string\\|string\\[]   |       |\n| prefix       | 前缀，一般用于放置图标            | ReactNode           |       |\n| suffix       | 后缀，一般用于放置图标            | ReactNode           |       |\n| clearButton  | 是否显示清除按钮               | boolean             | false |\n| minLength    | 最小长度                   | number              |       |\n| maxLength    | 最大长度                   | number              |       |\n| pattern      | 正则校验                   | string\\|RegExp      |       |\n| autoComplete | 自动完成，可选值：`on` `off`    | string              | off   |\n| addonBefore  | 设置前置标签                 | string \\| ReactNode |       |\n| addonAfter   | 设置后置标签                 | string \\| ReactNode |       |\n| restrict     | 限制可输入的字符               | string              |       |"
  },
  "TextArea": {
    "hoverDoc": "| 属性       | 说明                                                       | 类型               | 默认值   |\n| -------- | -------------------------------------------------------- | ---------------- | ----- |\n| cols     | 文本域宽                                                     | number           | -     |\n| rows     | 文本域高                                                     | number           | -     |\n| resize   | 是否能够拖拽调整大小，可选值： `none` `both` `vertical` `horizontal`    | string           | none  |\n| autoSize | 自适应内容高度，可设置为 true\\| false 或对象：{ minRows: 2, maxRows: 6 } | boolean\\| object | false |"
  },
  "SelectBox": {
    "hoverDoc": "| 参数       | 说明                          | 类型      | 默认值   |\n| -------- | --------------------------- | ------- | ----- |\n| mode     | 选择器的展现形式，可选值 `box` `button` | string  |       |\n| vertical | 是否垂直显示                      | boolean | false |"
  },
  "Select": {
    "hoverDoc": "| 参数                        | 说明                                                                                                                             | 类型                                                             | 默认值                                                                         |\n| ------------------------- | ------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------- | --------------------------------------------------------------------------- |\n| combo                     | 复合输入值                                                                                                                          | boolean                                                        | false                                                                       |\n| searchable                | 是否可搜索                                                                                                                          | boolean                                                        | false                                                                       |\n| searchMatcher             | 搜索器。当为字符串时，作为 lookup 的参数名来重新请求值列表。                                                                                             | string \\| ({ record, text, textField, valueField }) => boolean | ({ record, text, textField }) => record.get(textField).indexOf(text) !== -1 |\n| paramMatcher              | 参数匹配器。当为字符串时，进行参数拼接。                                                                                                           | string \\| ({ record, text, textField, valueField }) => string  |                                                                             |\n| optionsFilter             | 选项过滤                                                                                                                           | (record) => boolean                                            |                                                                             |\n| checkValueOnOptionsChange | 当选项改变时，检查并清除不在选项中的值                                                                                                            | boolean                                                        | true                                                                        |\n| dropdownMatchSelectWidth  | 下拉框匹配输入框宽度                                                                                                                     | boolean                                                        | true                                                                        |\n| dropdownMenuStyle         | 下拉框菜单样式名                                                                                                                       | object                                                         |                                                                             |\n| options                   | 下拉框选项数据源（使用后需要自行处理参数等）                                                                                                         | DataSet                                                        |                                                                             |\n| primitiveValue            | 是否为原始值（建议以绑定的数据源 Field 的 type 来决定值类型，如 type 设为 object 相当于 primitiveValue 设为 false）`true` - 选项中 valueField 对应的值 `false` - 选项值对象 | boolean                                                        |                                                                             |\n| optionRenderer            | 渲染 Option 本文的钩子                                                                                                                | ({ record, text, value }) => ReactNode                         |                                                                             |\n| notFoundContent           | 当下拉列表为空时显示的内容                                                                                                                  | ReactNode                                                      |                                                                             |\n| onOption                  | 设置选项属性，如 disabled                                                                                                              | ({ dataSet, record })) => object                               |                                                                             |\n| commonItem                | 设置常用项                                                                                                                          | Array&lt;string>                                               | undefined                                                                   |\n| maxCommonTagPlaceholder   | 设置常用项标签超出最大数量时的占位描述                                                                                                            | ReactNode \\| (restValues) => ReactNode                         |                                                                             |\n| maxCommonTagCount         | 设置常用项标签最大数量                                                                                                                    | number                                                         |                                                                             |\n| maxCommonTagTextLength    | 设置常用项标签文案最大长度                                                                                                                  | number                                                         |                                                                             |"
  },
  "Range": {
    "hoverDoc": "| 参数       | 说明                              | 类型      | 默认值   |\n| -------- | ------------------------------- | ------- | ----- |\n| max      | 最大值                             | number  | 100   |\n| min      | 最小值                             | number  | 0     |\n| step     | 步长，取值必须大于 0，并且可被 (max - min) 整除 | number  | 1     |\n| vertical | 是否垂直                            | boolean | false |"
  },
  "Radio": {
    "hoverDoc": "| 参数             | 说明                      | 类型      | 默认值   |\n| -------------- | ----------------------- | ------- | ----- |\n| checked        | &lt;受控>是否选中             | boolean |       |\n| defaultChecked | 初始是否选中                  | boolean | false |\n| mode           | 显示模式，可选值：`box` `button` | string  | box   |"
  },
  "Password": {
    "hoverDoc": "| 参数     | 说明    | 类型      | 默认值  |\n| ------ | ----- | ------- | ---- |\n| reveal | 是否可揭示 | boolean | true |"
  },
  "NumberField": {
    "hoverDoc": "| 参数               | 说明                                                                                                                               | 类型                                                                                           | 默认值   |\n| ---------------- | -------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------- | ----- |\n| min              | 最小值                                                                                                                              | number                                                                                       |       |\n| max              | 最大值                                                                                                                              | number                                                                                       |       |\n| step             | 步距                                                                                                                               | number                                                                                       |       |\n| nonStrictStep    | 非严格步距，在非严格步距下，允许输入值不为步距的倍数加上最小值，也允许在设置整数步距的情况下输入小数                                                                               | boolean                                                                                      | false |\n| formatter        | 格式器,默认值为static的[format](https://github.com/choerodon/choerodon-ui/blob/master/components-pro/number-field/NumberField.tsx)       | FormatNumberFunc: (value: string, lang: string, options: Intl.NumberFormatOptions) => string |       |\n| formatterOptions | 格式器参数,可以与全局值以及默认值进行合并,默认值[参考](https://github.com/choerodon/choerodon-ui/blob/master/components-pro/number-field/NumberField.tsx) | FormatNumberFuncOptions: { lang?: string, options?: Intl.NumberFormatOptions }               |       |"
  },
  "Lov": {
    "hoverDoc": "| 参数            | 说明                                                | 类型                                                             | 默认值                                                                         |\n| ------------- | ------------------------------------------------- | -------------------------------------------------------------- | --------------------------------------------------------------------------- |\n| modalProps    | 弹窗属性，详见[ModalProps](/components/modal/#Modal)     | object                                                         |                                                                             |\n| tableProps    | 表格属性，详见[TableProps](/components-pro/table/#Table) | object                                                         |                                                                             |\n| triggerMode   | 触发弹窗模式,可选值: `icon` `input`                        | string                                                         | icon                                                                        |\n| noCache       | 弹窗时自动重新查询                                         | string\\| boolean                                               | false                                                                       |\n| mode          | 显示模式，可选值: `default` `button`                      | string                                                         | default                                                                     |\n| searchMatcher | 搜索器。当为字符串时，作为 lookup 的参数名来重新请求值列表。                | string \\| ({ record, text, textField, valueField }) => boolean | ({ record, text, textField }) => record.get(textField).indexOf(text) !== -1 |\n| paramMatcher  | 参数匹配器。当为字符串时，进行参数拼接。                              | string \\| ({ record, text, textField, valueField }) => string  |                                                                             |"
  },
  "IntlField": {
    "hoverDoc": "| 参数         | 说明                                            | 类型     | 默认值 |\n| ---------- | --------------------------------------------- | ------ | --- |\n| modalProps | 弹窗属性，详见[ModalProps](/components/modal/#Modal) | object |     |\n| maxLengths | 多语言弹窗内选项输入最大长度(主语言 Field maxLength 配置优先)      | object |     |"
  },
  "Form": {
    "hoverDoc": "| 参数                     | 说明                                                                                                            | 类型                           | 默认值                       |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------- | ---------------------------- | ------------------------- |\n| action                 | 表单提交请求地址，当设置了 dataSet 时，该属性无作用                                                                                | string                       |                           |\n| method                 | 表单提交的 HTTP Method, 可选值 `GET` `POST`                                                                           | string                       | POST                      |\n| target                 | 表单提交的目标，当表单设置了设置 target 且没有 dataSet 时作浏览器默认提交，否则作 Ajax 提交                                                     | string                       |                           |\n| processParams          | Ajax 提交时的参数回调                                                                                                 | (event) => object            |                           |\n| useColon               | 是否使用冒号,当开启时会在所有的label后面加上冒号,并且必填的\\*号会被移到最前方                                                                   | boolean                      | false                     |\n| excludeUseColonTagList | 不使用冒号的标签的列表,当为自定义组件的时候,需要设置displayName作为标签名                                                                   | string\\[]                    | ['div','button','Button'] |\n| labelWidth             | 内部控件的标签宽度。如果为数组则分别对应每列的标签宽度。数组长度不够列数，以默认值补全, 响应式参考[Responsive]\\(#Form Responsive)                             | number\\| number\\[] \\| object | 100                       |\n| labelAlign             | 标签文字对齐方式, 只在 labelLayout 为`horizontal`时起作用，可选值： `left` `center` `right`, 响应式参考[Responsive]\\(#Form Responsive) | string \\| object             | right                     |\n| labelLayout            | 标签位置, 可选值 `horizontal` `vertical` `placeholder` `float` `none`, 响应式参考[Responsive]\\(#Form Responsive)          | string \\| object             | horizontal                |\n| dataIndex              | 对照 record 在 DataSet 中的 index                                                                                  | number                       | ds.currentIndex           |\n| record                 | 对照 record, 优先级高于 dataSet 和 dataIndex                                                                          | Record                       |                           |\n| columns                | 列数, 响应式参考[Responsive]\\(#Form Responsive)                                                                      | number \\| object             | 1                         |\n| pristine               | 显示原始值                                                                                                         | boolean                      | false                     |\n| onSubmit               | 提交回调                                                                                                          | Function                     |                           |\n| onReset                | 重置回调                                                                                                          | Function                     |                           |\n| onSuccess              | 提交成功回调                                                                                                        | Function                     |                           |\n| onError                | 提交失败回调                                                                                                        | Function                     |                           |\n| separateSpacing        | 切分单元格间隔，当label布局为默认值 horizontal 时候使用 padding 修改单元格横向间距可能需要结合labelwidth效果会更好                                   | {width:number,height:number} | -                         |"
  },
  "Upload": {
    "hoverDoc": "| 属性                | 说明                                                                                                              | 类型                                                        | 默认值       |   |\n| ----------------- | --------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- | --------- | - |\n| accept            | 接受上传的文件类型 [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) | string                                                    |           |   |\n| action            | 上传的地址                                                                                                           | string                                                    | `''`      |   |\n| data              | 上传所需参数或返回上传参数的方法                                                                                                | object\\|fucntion(file)                                    |           |   |\n| headers           | 设置上传的请求头部，IE10 以上有效                                                                                             | `object`                                                  |           |   |\n| multiple          | 是否支持多选，IE10 以上有效                                                                                                | `boolean`                                                 | `false`   |   |\n| name              | `<input>`元素的 name 字段                                                                                            | string                                                    | `'file'`  |   |\n| uploadImmediately | 是否选择文件后立即上传（若为否，组件自身会提供上传按钮）                                                                                    | `boolean`                                                 | `true`    |   |\n| fileListMaxLength | 同时上传文件的最大数量                                                                                                     | `number`                                                  | `0`，表示无限制 |   |\n| defaultFileList   | 默认显示的文件列表                                                                                                       | `object[]`                                                | -         |   |\n| uploadFileList    | 显示设定的文件列表（可控）                                                                                                   | `object[]`                                                | -         |   |\n| withCredentials   | 上传请求时是否携带 cookie                                                                                                | `boolean`                                                 | `false`   |   |\n| appendUpload      | 是否以追加形式添加文件至列表中                                                                                                 | `boolean`                                                 | `false`   |   |\n| partialUpload     | 只上传文件状态不是`success`的文件                                                                                           | `boolean`                                                 | `true`    |   |\n| beforeUpload      | 上传文件之前的钩子，参数为上传的文件，可对文件在上传之前进行校验操作若返回 false 则停止上传。支持返回一个 Promise 对象，Promise 对象 reject 时则停止上传，resolve 时开始上传。     | \\`(file, fileList) => boolean                             | Promise\\` | - |\n| showPreviewImage  | 是否显示图片预览                                                                                                        | `boolean`                                                 | `true`    |   |\n| showUploadBtn     | 是否显示上传按钮                                                                                                        | `boolean`                                                 | `true`    |   |\n| showUploadList    | 是否显示上传列表                                                                                                        | `boolean`                                                 | `true`    |   |\n| previewImageWidth | 预览图片 Img 元素的宽度                                                                                                  | `number`                                                  | `100`     |   |\n| onFileChange      | input 元素内部文件变化的回调                                                                                               | `(fileList: UploadFile[]) => void`                        | 无         |   |\n| onRemoveFile      | 点击移除文件时的回调，返回值为 false 时不移除。支持返回一个 Promise 对象，Promise 对象 resolve(false) 或 reject 时不移除。                           | function(file): boolean                                   | Promise   | 无 |\n| onUploadProgress  | 上传进度变化的回调                                                                                                       | `(percent: number, file: UploadFile) => void`             | 无         |   |\n| onUploadSuccess   | 上传成功的回调                                                                                                         | `(response: any, file: UploadFile) => void`               | 无         |   |\n| onUploadError     | 上传出错的回调                                                                                                         | `(error: Error, response: any, file: UploadFile) => void` | 无         |   |"
  },
  "DatePicker": {
    "hoverDoc": "| 参数           | 说明                                                                      | 类型                                                          | 默认值  |\n| ------------ | ----------------------------------------------------------------------- | ----------------------------------------------------------- | ---- |\n| mode         | 显示模式,可选值: `date` `dateTime` `time` `year` `month` `week`                | string                                                      | date |\n| min          | 最小日期                                                                    | MomentInput                                                 |      |\n| max          | 最大日期                                                                    | MomentInput                                                 |      |\n| format       | 日期格式，如 `YYYY-MM-DD HH:mm:ss`                                            | string                                                      |      |\n| step         | 时间步距                                                                    | { hour: number, minute: number, second: number }            |      |\n| filter       | 日期过滤                                                                    | (currentDate, selected) => boolean                          |      |\n| cellRenderer | 单元格渲染, view可选值: `date` `dateTime` `time` `week` `month` `year` `decade` | (view) => (props, text, currentDate, selected) => ReactNode |      |"
  },
  "Currency": {
    "hoverDoc": "| 参数       | 说明                                                                                                      | 类型     | 默认值 |\n| -------- | ------------------------------------------------------------------------------------------------------- | ------ | --- |\n| currency | 货币代码，详见[Current currency & funds code list.](https://www.currency-iso.org/en/home/tables/table-a1.html) | string |     |"
  },
  "ColorPicker": {
    "hoverDoc": "| 属性           | 说明  | 类型     | 默认值       |\n| ------------ | --- | ------ | --------- |\n| defaultValue | 默认值 | string | `#ff0000` |"
  },
  "CodeArea": {
    "hoverDoc": "| 属性             | 说明                                                                          | 类型                | 默认值                   |\n| -------------- | --------------------------------------------------------------------------- | ----------------- | --------------------- |\n| options        | 编辑器配置，详见[CodeMirror Options](https://codemirror.net/doc/manual.html#config) | object            |                       |\n| formatHotKey   | 格式化快捷键                                                                      | string            | `Alt+F`               |\n| unFormatHotKey | 清除格式化快捷键                                                                    | string            | `Alt+R`               |\n| formatter      | `CodeAreaFormatter`类的实例，用于格式化                                               | CodeAreaFormatter | `new JSONFormatter()` |"
  },
  "CheckBox": {
    "hoverDoc": "| 参数                | 说明      | 类型                | 默认值   |\n| ----------------- | ------- | ----------------- | ----- |\n| unCheckedValue    | 未选中时的值  | any               |       |\n| unCheckedChildren | 非选中时的内容 | string\\|ReactNode |       |\n| indeterminate     | 中间状态    | boolean           | false |"
  },
  "Cascader": {
    "hoverDoc": "| 参数                       | 说明                                                                                                                             | 类型                                                                 | 默认值     |\n| ------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------ | ------- |\n| expandTrigger            | 次级菜单的展开方式，可选 'click' 和 'hover'                                                                                                 | string                                                             | 'click' |\n| dropdownMatchSelectWidth | 下拉单个      框匹配输入框宽度                                                                                                             | boolean                                                            | true    |\n| dropdownMenuStyle        | 下拉框菜单样式名                                                                                                                       | object                                                             |         |\n| options                  | 下拉框选项数据源                                                                                                                       | DataSet \\| Array:[{meaning:``,value:``}]                           |         |\n| primitiveValue           | 是否为原始值（建议以绑定的数据源 Field 的 type 来决定值类型，如 type 设为 object 相当于 primitiveValue 设为 false）`true` - 选项中 valueField 对应的值 `false` - 选项值对象 | boolean                                                            |         |\n| notFoundContent          | 当下拉列表为空时显示的内容                                                                                                                  | ReactNode                                                          |         |\n| onOption                 | 设置选项属性，如 disabled                                                                                                              | ({ dataSet, record })) => object \\| ({ options, item })) => object |         |\n| menuMode                 | 单框弹出形式切换                                                                                                                       | `single` \\| `multiple`                                             | -       |"
  },
  "AutoComplete": {
    "hoverDoc": "| 属性             | 说明              | 类型                                                       | 默认值 |\n| -------------- | --------------- | -------------------------------------------------------- | --- |\n| options        | 自动完成的数据源        | [DataSourceItemType](https://git.io/vMMKF)\\[] \\| DataSet |     |\n| optionRenderer | 渲染 Option 文本的钩子 | ({ record, text, value }) => ReactNode                   |     |"
  },
  "LocaleContext": {
    "hoverDoc": "| 方法                    | 说明                                                                                            | 参数类型   | 默认值                                                   |\n| --------------------- | --------------------------------------------------------------------------------------------- | ------ | ----------------------------------------------------- |\n| setLocale(locale)     | 语言包配置，语言包可到 `choerodon-ui/pro/lib/locale-context/` 目录下寻找                                      | object | choerodon-ui/pro/lib/locale-context/zh_CN             |\n| setSupports(supports) | IntlField支持的可编辑语言，默认可参考ja_JP,en_GB,en_US, zh_CN`choerodon-ui/pro/lib/locale-context/supports` | object | {zh_CN: '简体中文',en_GB: 'English',en_US: 'English(US)'} |"
  }
};

module.exports = hoverDocs;